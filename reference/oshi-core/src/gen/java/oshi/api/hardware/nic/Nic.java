/**
 * OSHI (https://github.com/oshi/oshi)
 *
 * Copyright (c) 2010 - 2019 The OSHI Project Team:
 * https://github.com/oshi/oshi/graphs/contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// This file was automatically generated by the OSHI API generator; do not edit!
package oshi.api.hardware.nic;

import javax.annotation.processing.Generated;
import oshi.api.Container;

@Generated("oshi.ApiGenerator")
public interface Nic extends Container {
    String getName();

    String getDescription();

    Integer getMtu();

    Integer queryMtu();

    String getMac();

    String queryMac();

    Boolean getVirtual();

    Boolean queryVirtual();

    String[] getIpv4();

    String[] queryIpv4();

    String[] getIpv6();

    String[] queryIpv6();

    String getBroadcast();

    String queryBroadcast();

    String getNetmask();

    String queryNetmask();

    Long getReadBytes();

    Long queryReadBytes();

    Long getWriteBytes();

    Long queryWriteBytes();

    Long getReadPackets();

    Long queryReadPackets();

    Long getWritePackets();

    Long queryWritePackets();

    Long getReadErrors();

    Long queryReadErrors();

    Long getWriteErrors();

    Long queryWriteErrors();

    Long getReadDrops();

    Long queryReadDrops();

    Long getWriteDrops();

    Long queryWriteDrops();

    Long getWriteCollisions();

    Long queryWriteCollisions();

    Long getLinkSpeed();

    Long queryLinkSpeed();

    Boolean getDefaultGateway();

    Boolean queryDefaultGateway();

    Boolean getFlagUp();

    Boolean queryFlagUp();

    Boolean getFlagRunning();

    Boolean queryFlagRunning();

    Boolean getFlagLoopback();

    Boolean queryFlagLoopback();

    Boolean getFlagMulticast();

    Boolean queryFlagMulticast();
}
