/**
 * OSHI (https://github.com/oshi/oshi)
 *
 * Copyright (c) 2010 - 2019 The OSHI Project Team:
 * https://github.com/oshi/oshi/graphs/contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// This file was automatically generated by the OSHI API generator; do not edit!
package oshi.api.hardware.firmware.internal;

import java.lang.Override;
import javax.annotation.processing.Generated;
import oshi.api.AttributeKey;
import oshi.api.hardware.firmware.Firmware;
import oshi.api.internal.AbstractContainer;
import oshi.driver.ComponentDriver;

/**
 * The system's firmware
 */
@Generated("oshi.ApiGenerator")
public abstract class FirmwareContainer extends AbstractContainer implements Firmware {
    public String name;

    /**
     * The BIOS manufacturer title
     */
    public String manufacturer;

    /**
     * The BIOS description
     */
    public String description;

    /**
     * The BIOS version number
     */
    public String version;

    /**
     * The BIOS revision number
     */
    public String revision;

    /**
     * The BIOS release date
     */
    public String releaseDate;

    @Override
    public String getName() {
        return name;
    }

    @Override
    public String getManufacturer() {
        return manufacturer;
    }

    @Override
    public String getDescription() {
        return description;
    }

    @Override
    public String getVersion() {
        return version;
    }

    @Override
    public String getRevision() {
        return revision;
    }

    @Override
    public String getReleaseDate() {
        return releaseDate;
    }

    public void attach(ComponentDriver driver) {
        this.driver = driver;
        // Query all constant attributes:
        driver.query(FirmwareAttributeEnum.NAME);
        driver.query(FirmwareAttributeEnum.MANUFACTURER);
        driver.query(FirmwareAttributeEnum.DESCRIPTION);
        driver.query(FirmwareAttributeEnum.VERSION);
        driver.query(FirmwareAttributeEnum.REVISION);
        driver.query(FirmwareAttributeEnum.RELEASE_DATE);
    }

    @Override
    public <T> T get(AttributeKey<T> key) {
        switch ((FirmwareAttributeEnum) key.getAttributeEnum()) {
        default:
            return null;
        case NAME:
            return (T) name;
        case MANUFACTURER:
            return (T) manufacturer;
        case DESCRIPTION:
            return (T) description;
        case VERSION:
            return (T) version;
        case REVISION:
            return (T) revision;
        case RELEASE_DATE:
            return (T) releaseDate;
        }
    }
}
